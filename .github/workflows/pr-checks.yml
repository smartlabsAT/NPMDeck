name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-quality:
    name: Quality Gates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Check TypeScript
        id: typecheck
        run: |
          echo "### üîç TypeScript Check" >> $GITHUB_STEP_SUMMARY
          if pnpm run typecheck; then
            echo "‚úÖ TypeScript: **No errors**" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "‚ùå TypeScript: **Errors found**" >> $GITHUB_STEP_SUMMARY
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Check ESLint
        id: lint
        run: |
          echo "### üîç ESLint Check" >> $GITHUB_STEP_SUMMARY
          pnpm run lint 2>&1 | tee lint-output.txt || true
          
          ERRORS=$(grep -E "^\s+[0-9]+:[0-9]+\s+error" lint-output.txt | wc -l || echo "0")
          WARNINGS=$(grep -c "warning" lint-output.txt || echo "0")
          
          if [ "$ERRORS" -eq "0" ]; then
            echo "‚úÖ ESLint Errors: **0**" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "‚ùå ESLint Errors: **$ERRORS**" >> $GITHUB_STEP_SUMMARY
            echo "status=failure" >> $GITHUB_OUTPUT
          fi
          
          echo "‚ö†Ô∏è ESLint Warnings: **$WARNINGS** (not blocking)**" >> $GITHUB_STEP_SUMMARY
          
          if [ "$ERRORS" -gt "0" ]; then
            exit 1
          fi

      - name: Set PR Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const typecheck = '${{ steps.typecheck.outputs.status }}' === 'success';
            const lint = '${{ steps.lint.outputs.status }}' === 'success';
            
            const status = typecheck && lint ? 'success' : 'failure';
            const description = typecheck && lint 
              ? '‚úÖ All checks passed' 
              : `‚ùå ${!typecheck ? 'TypeScript' : ''} ${!typecheck && !lint ? ' and ' : ''} ${!lint ? 'ESLint' : ''} failed`;
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: status,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: description,
              context: 'Quality Gates'
            });