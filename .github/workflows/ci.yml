name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Run TypeScript type checking
        run: pnpm run typecheck

      - name: Run ESLint
        id: eslint
        run: |
          pnpm run lint 2>&1 | tee lint-output.txt || true
          ERRORS=$(grep -c "error" lint-output.txt || echo "0")
          WARNINGS=$(grep -c "warning" lint-output.txt || echo "0")
          echo "errors=$ERRORS" >> $GITHUB_OUTPUT
          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT
          
          if [ "$ERRORS" -gt "0" ]; then
            echo "‚ùå Found $ERRORS ESLint errors"
            exit 1
          else
            echo "‚úÖ No ESLint errors found"
          fi

      - name: Comment PR with lint results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const errors = '${{ steps.eslint.outputs.errors }}' || '0';
            const warnings = '${{ steps.eslint.outputs.warnings }}' || '0';
            
            const comment = `## üìä Code Quality Report
            
            ${errors === '0' ? '‚úÖ' : '‚ùå'} **ESLint Errors:** ${errors}
            ‚ö†Ô∏è **ESLint Warnings:** ${warnings}
            
            ${errors === '0' ? 'üéâ All quality checks passed!' : '‚ö†Ô∏è Please fix ESLint errors before merging.'}
            
            Run \`pnpm run lint\` locally to see details.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Build application
        run: pnpm run build

      - name: Check build output
        run: |
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful!"
            echo "Build size: $(du -sh dist | cut -f1)"
          else
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi

  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: npmdeck:test
          cache-from: type=gha
          cache-to: type=gha,mode=max